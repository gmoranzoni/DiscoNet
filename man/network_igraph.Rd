% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network_igraph.R
\name{network_igraph}
\alias{network_igraph}
\title{Convert Network Data to Igraph Object with Attributes}
\usage{
network_igraph(
  network,
  node_table = NULL,
  edge_table = NULL,
  relevance_score_cutoff = 0
)
}
\arguments{
\item{network}{A dataframe representing the network, expected to have columns that can be used as edges.}

\item{node_table}{A dataframe or NULL, representing node attributes. Defaults to NULL.}

\item{edge_table}{A dataframe or NULL, representing edge attributes. Defaults to NULL.}

\item{relevance_score_cutoff}{A numeric value representing the minimum relevance score for nodes to be included in the output graph. Defaults to 0.}
}
\value{
An igraph object representing the network, with specified attributes.
}
\description{
This function creates an igraph object from the provided network data. It assigns
the attributes stored in `node_table` to the vertices (vertex attributes) of the igraph object.
The function also offers the possibility to set a relevance score cutoff to retrieve a network
containing only genes/proteins with a relevance score higher than the specified cutoff.
In the absence of a `node_table` or `edge_table`, the input network is converted into an igraph
object with no attributes.
}
\examples{
\dontrun{
# Using example data frames for network, node_table, and edge_table (to be provided for practical examples).

network_df <- data.frame(node1 = c('A', 'B', 'C'), node2 = c('B', 'C', 'D'))
node_attributes <- data.frame(nodes = c('A', 'B', 'C', 'D'), attribute1 = c(1, 2, 3, 4), attribute2 = c(5, 6, 7, 8))
edge_attributes <- data.frame(edge_attr = c('X', 'Y', 'Z')) # Dummy example, adapt accordingly

graph <- network_igraph(network = network_df, node_table = node_attributes, edge_table = edge_attributes, relevance_score_cutoff = 2)
}
}
