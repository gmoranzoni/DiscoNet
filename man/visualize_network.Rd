% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualize_network.R
\name{visualize_network}
\alias{visualize_network}
\title{Visualize Network}
\usage{
visualize_network(
  igraph,
  layout = with_fr(),
  discrete = NULL,
  continuous = NULL
)
}
\arguments{
\item{igraph}{The network in the form of an `igraph` object.}

\item{layout}{The desired network layout, with default being `with_fr()`. Supported layouts include `with_fr()`, `with_dh()`, `with_gem()`,
`with_graphopt()`, `with_kk()`, `with_lgl()`, `with_mds()`, `as_star()`, `as_tree()`, `in_circle()`, `nicely()`, `on_grid()`, and `randomly()`.}

\item{discrete}{The name of the column storing the discrete values that should be used for node color mapping. Default is `NULL`.}

\item{continuous}{The name of the column storing the continuous variable that should be used for node color mapping. Default is `NULL`.}
}
\value{
A list containing the static ggplot object and interactive plotly visualization of the network.
}
\description{
Creates static and interactive visualizations of a given network with customizable layouts and aesthetic attributes.
It allows the user to visualize networks using discrete or continuous data for node color and provides several layout options.
}
\examples{
\dontrun{
# Assuming `sample_igraph` is a predefined igraph object, `sample_layout` a chosen layout,
# and `sample_discrete` & `sample_continuous` are column names in the igraph object.
visualize_network(igraph = sample_igraph, layout = sample_layout, discrete = sample_discrete, continuous = sample_continuous)
}
}
